import i18next from 'i18next';
import React, { Component } from 'react';
class M_body extends Component {
    constructor(props) {
        super(props);
        this.state = {
        };
    }
    //

    renderMale = (keyId) => {

        switch (keyId) {
            case 0:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M99.35 134.19c-1.83 1.82-4.13 3.5-6.63 4.59h.05s-4.21 1.35-6.5 1.46h-.12c-4.73.49-9.35.5-14.01.05-.06 0-.13-.01-.2-.01-2.29-.12-5.99-.95-6.39-1.11-3-1.01-5.77-2.95-7.9-5.08-2.71-2.75-4.41-5.8-4.34-8.8.15-7.91 2.72-42.84 4.22-49.98 1.38-5.28 5.56-10.51 12.05-11.21 1.46-.12 2.95-.21 4.45-.26.75-.03 1.51-.04 2.26-.05.38 0 .76-.01 1.14-.01.38 0 .76 0 1.14.01.38 0 .76.01 1.14.02.19 0 .38.01.57.02.19.01.38.01.57.02.76.03 1.52.06 2.28.11 1.52.09 3.03.21 4.52.37 6.69.88 10.95 6.13 12.11 11.29 1.31 6.99 3.89 41.81 4.04 49.7.07 2.97-1.66 6.07-4.45 8.87z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            // case 1:
            //     return (
            //         <g transform={`translate(${this.props.x}, ${this.props.y})`} >
            //             <path
            //                 d="M111.64 85.46L93.29 72.13a24.39 24.39 0 00-28.67 0L46.27 85.46a24.387 24.387 0 00-8.86 27.26l4.52 13.91c.96 2.95-1.24 5.98-4.34 5.98-5.1 0-9.26 4.17-9.26 9.26s4.17 9.26 9.26 9.26h24.65c.7 0 1.39-.08 2.05-.23 1.09.15 2.21.23 3.33.23H90.3c10.57 0 19.93-6.8 23.19-16.85l7.01-21.57a24.377 24.377 0 00-8.86-27.25z"
            //                 fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
            //             />
            //         </g>
            //     );
            // case 2:
            //     return (
            //         <g transform={`translate(${this.props.x}, ${this.props.y})`} >
            //             <path
            //                 d="M113.21 118.97c0 19.6-15.42 35.49-34.43 35.49-19.02 0-34.43-15.89-34.43-35.49s22.18-51.92 34.43-51.92c11.08 0 34.43 32.32 34.43 51.92z"
            //                 fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
            //             />
            //         </g>
            //     );
            case 1:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M115.97 113.97c1.93-22.64-16.91-41.96-39.66-40.64-19.71 1.15-35.35 17.47-35.35 37.43 0 6.81 1.82 13.2 5.01 18.71 2 3.46-.52 7.79-4.53 7.79h-1.6c-3.03 0-5.51 2.47-5.51 5.5 0 3.02 2.48 5.5 5.51 5.5h68.75c3.03 0 5.51-2.47 5.51-5.5 0-3.02-2.48-5.5-5.51-5.5-1.29 0-2-1.5-1.18-2.48 4.78-5.75 7.89-12.93 8.56-20.81z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 2:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M123.44 120.58l-1.6-.24c.06-.58.11-1.17.15-1.76l1.04-.13c1.41-.17 2.45-1.45 2.32-2.85-.13-1.4-1.39-2.4-2.8-2.22l-.69.08-.12-1.03-.12-.75.38-.08c1.4-.28 2.33-1.63 2.09-3.02-.24-1.39-1.57-2.28-2.96-2l-.57.12c-.15-.58-.32-1.16-.49-1.73l.38-.11c1.37-.39 2.2-1.81 1.85-3.17a2.487 2.487 0 00-3.11-1.77l-.83.23c-.22-.55-.46-1.1-.7-1.64l.71-.26c1.34-.49 2.05-1.97 1.6-3.3-.45-1.33-1.9-2.01-3.23-1.52l-1.39.51c-.38-.67-.77-1.34-1.18-1.99l1.44-1.4c1.02-.99 1.08-2.64.12-3.67-.95-1.04-2.55-1.07-3.57-.08l-.92.89c-.36-.48-.73-.94-1.11-1.4l1.25-1.11c1.07-.94 1.2-2.58.29-3.66-.9-1.08-2.5-1.19-3.57-.24l-1.39 1.23c-.32-.32-.63-.63-.96-.93l1.29-1.71c.86-1.14.66-2.77-.44-3.65-1.1-.88-2.69-.66-3.54.47l-1.19 1.58c-.45-.34-.91-.68-1.37-1l.9-1.41c.77-1.2.44-2.81-.72-3.6-1.17-.79-2.73-.46-3.5.74l-1.02 1.6c-.45-.24-.9-.47-1.36-.69l.37-1.38a2.56 2.56 0 00-1.82-3.14 2.56 2.56 0 00-3.14 1.82l-.2.74c-.63-.21-1.27-.41-1.91-.59l.22-.82a2.56 2.56 0 00-1.82-3.14 2.56 2.56 0 00-3.14 1.82l-.29 1.09c-.6-.08-1.2-.15-1.8-.21v-1.4a2.57 2.57 0 10-5.14 0v1.24c-.58.02-1.16.05-1.74.09l-.2-1.2a2.557 2.557 0 00-2.94-2.11c-1.4.23-2.34 1.55-2.11 2.95l.18 1.08c-.53.11-1.06.24-1.58.37a2.565 2.565 0 00-3.12-1.76 2.558 2.558 0 00-1.81 3.14l.06.24c-.58.24-1.16.49-1.73.76l-.33-.53a2.47 2.47 0 00-3.49-.74c-1.16.79-1.49 2.4-.72 3.6l.09.13c-.51.32-1.01.66-1.5 1.01l-.23-.31a2.47 2.47 0 00-3.54-.47c-1.1.87-1.3 2.51-.44 3.64l.22.29c-.4.35-.79.71-1.18 1.07l-.07.07-.03-.02a2.483 2.483 0 00-3.56.24c-.84 1.01-.78 2.5.1 3.46-.45.53-.9 1.07-1.33 1.62l-.39-.38c-1.02-.99-2.62-.96-3.57.08-.95 1.03-.9 2.68.12 3.67l.85.83c-.38.6-.76 1.21-1.12 1.82l-1.71-.63c-1.33-.49-2.78.19-3.23 1.52-.45 1.33.27 2.81 1.6 3.3l.98.36c-.24.53-.47 1.07-.69 1.61l-1.1-.31a2.47 2.47 0 00-3.1 1.77c-.35 1.36.48 2.78 1.85 3.17l.7.2c-.16.57-.3 1.14-.44 1.71l-.94-.19c-1.39-.28-2.72.61-2.96 2-.24 1.38.69 2.73 2.09 3.01l.99.2c-.08.88-.14 1.76-.15 2.65 0 .12 0 .23-.01.35a2.46 2.46 0 00-2.17 2.22c-.13 1.4.9 2.67 2.31 2.84h.01c.06.68.14 1.36.24 2.02l-.66.1c-1.4.21-2.34 1.51-2.09 2.89.25 1.38 1.59 2.33 2.99 2.12l.86-.13c.22.73.46 1.45.72 2.15l-.92.52c-1.24.7-1.66 2.24-.94 3.44.72 1.21 2.31 1.62 3.55.92l.5-.28c.34.59.7 1.17 1.08 1.73l-.8.73c-1.05.96-1.1 2.56-.13 3.57.98 1.01 2.62 1.05 3.66.09l.44-.41c.36.39.74.77 1.13 1.14l-.65.74c-.94 1.07-.82 2.66.26 3.56 1.08.9 2.71.76 3.65-.31l.64-.73c.62.45 1.25.89 1.9 1.31l-.58 1.1c-.66 1.26-.18 2.78 1.08 3.4 1.26.62 2.82.11 3.48-1.15l.44-.84c.78.39 1.57.75 2.37 1.1l-.49 1.24c-.52 1.32.13 2.81 1.44 3.32 1.32.52 2.81-.13 3.32-1.45l.51-1.3c.57.19 1.15.37 1.73.54l-.44 1.31c-.45 1.34.27 2.8 1.61 3.24 1.34.45 2.79-.28 3.24-1.62l.57-1.69c.65.14 1.31.26 1.97.38l-.1 1.52a2.57 2.57 0 002.39 2.73c1.41.09 2.63-.98 2.73-2.39l.08-1.19c.38.03.76.07 1.13.09l-.05.75a2.57 2.57 0 002.39 2.73c1.41.09 2.63-.98 2.73-2.39l.07-.97c.13 0 .25-.01.38-.01l.14.92c.22 1.4 1.53 2.35 2.93 2.13 1.4-.22 2.35-1.53 2.13-2.93l-.1-.61c.59-.09 1.18-.19 1.76-.3l.22 1a2.563 2.563 0 005-1.12l-.25-1.11c.64-.2 1.27-.41 1.9-.63l.59 1.3a2.56 2.56 0 003.4 1.26 2.56 2.56 0 001.26-3.4l-.53-1.16c.74-.36 1.46-.74 2.18-1.14l.42.8c.66 1.26 2.23 1.78 3.49 1.15 1.26-.62 1.75-2.15 1.08-3.41l-.68-1.29c.61-.44 1.21-.89 1.8-1.36l.85.97c.94 1.07 2.58 1.21 3.66.31 1.08-.9 1.2-2.5.26-3.57l-.98-1.11c.36-.37.71-.75 1.06-1.14l.85.78c1.05.96 2.69.92 3.67-.09s.92-2.61-.13-3.57l-1.3-1.19c.34-.53.66-1.07.97-1.62l1.12.63c1.24.7 2.83.28 3.55-.92.72-1.21.3-2.75-.94-3.45l-1.62-.91c.22-.62.42-1.25.6-1.89l1.68.25c1.41.21 2.75-.74 3-2.12.27-1.35-.67-2.65-2.08-2.86z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 3:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M79.61 71.51c9.29.34 17.31 4.48 23.58 10.95 6.24 6.46 10.72 15.26 12.07 24.57 1.25 9.35-2.22 17.83-9.25 23.88-7.04 6.08-16.23 9.45-25.92 9.23-9.67-.31-19.91-3.45-26.81-8.97-7.04-5.54-10.74-13.45-10.39-23.72.17-10.19 5.8-20.09 12.59-26.55 6.96-6.57 15.09-9.72 24.13-9.39z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 4:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M79.96 149.1c-19.18 1.29-26.73-8.21-27.32-17.36-.66-10.29-.57-57.72 24.52-59.4 25.09-1.68 28.6 44.69 29.51 57.79.9 13.1-7.53 17.68-26.71 18.97z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 5:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M62.93 135.64c.05 0-4.34-4.48-7.82-10.89-1.77-3.18-3.37-6.78-4.48-10.36-1.12-3.58-1.76-7.14-1.96-10.32-.04-.77-.06-1.6-.06-2.46 0-.43 0-.87.02-1.33.01-.45.03-.91.05-1.38.09-1.87.3-3.86.67-5.9.74-4.07 2.17-8.35 4.85-12.02 2.69-3.67 6.62-6.67 12.3-8.19 2.84-.76 6.12-1.17 9.91-1.13.95.01 1.93.05 2.94.11 1.01.07 2.06.16 3.14.29 2.16.25 4.46.62 6.91 1.13 10.01 2.04 15.53 9.54 17.89 19.23.58 2.42.95 4.96 1.11 7.56.08 1.3.11 2.62.09 3.94-.02 1.32-.09 2.65-.22 3.98-.49 5.31-1.84 10.55-3.95 15.29-2.09 4.74-4.99 9-8.14 12.48-3.16 3.47-6.55 6.16-9.87 7.72-1.68.78-3.36 1.28-5.11 1.46-.88.09-1.77.09-2.69.01-.92-.08-1.86-.25-2.83-.52-3.84-1.09-8.36-3.7-12.75-8.7z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 6:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M106.38 126.31c-.41 3.8-1.15 7.84-3.29 11.09-3.08 4.67-9.75 5.78-14.9 6.31-6.98.71-14.18.57-21.14-.37-5.18-.7-10.6-2.49-13.08-7.5-2.71-5.5-3.08-11.81-2.89-17.84.2-6.57.32-13.18 1.32-19.7 1.01-6.63 2.7-13.52 6.57-19.11 4.91-7.09 12.83-9.87 21.24-9.51 8.81.38 16.06 4.41 20.26 12.29 3.27 6.12 4.68 13.04 5.42 19.88.65 6.04 1.13 12.26.88 18.39-.07 1.96-.17 4.01-.39 6.07z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 7:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M107.41 139.39c-.22.24-.51.38-.81.41-.31.02-.62-.06-.95-.3-.33-.24-.67-.44-1.01-.62-.08.17-.15.35-.23.52.24.28.48.56.74.82.29.29.38.62.36.89-.03.28-.18.49-.42.71-.25.21-.56.31-.86.3-.31-.01-.61-.14-.9-.41-.04-.04-.08-.07-.12-.1-.14.22-.28.44-.42.65.35.42.69.83 1.08 1.21.33.33.43.7.4 1-.03.31-.2.56-.48.8-.28.24-.63.35-.97.34-.35-.02-.69-.16-1.01-.47-.24-.23-.49-.43-.74-.62-.14.16-.28.32-.43.48.12.13.24.26.36.38.33.33.43.7.4 1-.03.31-.2.56-.48.8-.28.24-.63.35-.97.34-.35-.02-.69-.16-1.01-.47-.07-.07-.14-.12-.21-.18-.35.31-.72.61-1.09.91.14.49.29.99.48 1.46.17.43.11.81-.04 1.08-.16.27-.41.43-.77.55a1.4 1.4 0 01-1.03-.07c-.31-.15-.57-.41-.74-.82-.08-.19-.17-.37-.26-.55-.12.07-.24.15-.36.22.07.23.15.46.23.68.12.3.08.57-.03.76-.11.19-.29.31-.54.39-.25.08-.51.06-.73-.05-.22-.1-.4-.29-.52-.58-.04-.09-.08-.17-.12-.26-.21.11-.42.21-.63.32.05.09.11.19.16.28.2.33.21.64.13.88-.09.24-.27.41-.54.56-.28.14-.58.16-.85.09-.27-.08-.52-.26-.72-.57-.08-.12-.16-.23-.24-.34-.47.18-.95.36-1.43.52-.13.57-.26 1.13-.34 1.7-.06.46-.3.78-.57.95-.28.17-.59.19-.97.13-.38-.07-.69-.27-.89-.55-.2-.28-.3-.64-.25-1.09l.03-.32-.7.15c-.05.24-.1.48-.13.73-.05.33-.21.55-.41.67-.2.12-.42.14-.68.09a.97.97 0 01-.63-.39c-.14-.2-.21-.45-.18-.77-.45.06-.91.11-1.36.15.01.17.03.34.05.51.05.37-.07.66-.24.85-.18.19-.41.27-.72.3-.31.02-.59-.07-.81-.24-.22-.18-.37-.43-.43-.79-.03-.18-.07-.34-.11-.51-.13 0-.27.01-.4.01h-.15c-.09.44-.17.89-.22 1.34-.05.46-.28.77-.54.94-.27.17-.57.21-.94.16-.37-.06-.68-.25-.89-.51-.21-.27-.31-.62-.28-1.06.03-.35.03-.68.02-1-.26-.03-.52-.05-.78-.08-.03.2-.07.41-.09.61-.04.39-.23.65-.45.8-.23.15-.48.17-.8.13-.32-.05-.58-.21-.75-.44-.18-.23-.27-.52-.24-.9.02-.2.02-.39.02-.59-.42-.09-.84-.18-1.25-.28-.34.45-.68.9-.98 1.37-.26.41-.62.61-.95.66-.34.05-.64-.05-.97-.27-.33-.22-.53-.53-.61-.88-.07-.35-.01-.73.23-1.13.13-.22.24-.43.35-.65-.35-.13-.69-.26-1.04-.4-.05.21-.1.43-.14.64-.07.38-.28.63-.5.76-.23.13-.49.14-.8.08-.31-.07-.56-.24-.71-.48-.16-.24-.23-.53-.17-.9.06-.39.08-.76.08-1.13-.45-.23-.9-.48-1.34-.73-.27.45-.53.91-.75 1.39-.2.42-.51.64-.82.73-.31.08-.61.02-.94-.14-.33-.17-.56-.44-.67-.76-.11-.32-.09-.68.08-1.09.27-.6.42-1.2.58-1.79-.51-.38-1.01-.79-1.49-1.2l-.23.29c-.38.5-.86.71-1.29.73-.43.02-.81-.14-1.2-.45-.39-.32-.61-.74-.66-1.19-.05-.45.07-.92.43-1.41.14-.18.26-.37.38-.56-.22-.25-.43-.51-.64-.77-.38.42-.75.84-1.09 1.29-.38.5-.86.71-1.29.73-.43.02-.81-.14-1.2-.45-.39-.32-.61-.74-.66-1.19-.05-.45.07-.92.43-1.41.59-.8.99-1.63 1.43-2.46l.03-.06c-.13-.23-.25-.47-.37-.7-.37.24-.73.48-1.07.74-.42.32-.85.39-1.19.32-.35-.07-.61-.28-.86-.61-.24-.33-.33-.72-.27-1.09.06-.37.27-.72.66-1.04.55-.44.99-.92 1.44-1.4-1.13-3.33-1.54-6.97-1.08-10.81 1.5-12.98 3.3-25.9 3.54-38.86.16-7.94 3.57-13.68 7.79-17.01 4.35-3.38 9.51-4.37 15.99-4.03 6.48.47 12.1 3.26 16.09 7.56 3.99 4.34 6.34 10.19 6.41 17.84.02 12.7 2.21 24.24 4.09 36.08.58 3.18.38 6.26-.44 9.13.06.04.12.08.17.13.5.46.99.93 1.52 1.34.33.25.46.56.47.83-.04.29-.16.52-.37.77z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
            case 8:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path
                            d="M102.04 82.47c-4.87-2.56-7.51.62-5.96 5.9 5.11 14.25 6.32 33.13 6.77 40.78.78 13.24-6.5 17.88-23.05 19.18-16.55 1.3-23.07-8.3-23.58-17.55-.35-6.34-.46-26.63 4.42-41.89l.03-.1c.01-.04.03-.08.04-.11.09-.28.18-.55.27-.82 1.67-5.53-.91-8.38-5.9-5.76-10.61 5.57-16.45-4.39-11.61-9.59s9.32-2 12.96 1.85c4.07 4.31 12.06.02 14.37-1.37.2-.13.4-.26.6-.38.02-.02.04-.03.04-.03.25-.14.5-.28.75-.41.24-.12.49-.24.74-.35 1.37-.59 2.85-.97 4.45-1.1 3.11-.24 5.83.51 8.21 2.02v-.01s10.3 7.04 15.09 1.97c3.64-3.85 8.12-7.05 12.96-1.85 4.85 5.23-.99 15.19-11.6 9.62z"
                            fillRule="evenodd"
                            clipRule="evenodd"
                            fill={this.props.activeSkinColor != null ? this.props.activeSkinColor : "#ffe16b"}
                        />
                    </g>
                );
        }

    }

    render() {
        if (this.props.type == 'button') {
            return (
                <div className={`vectorBtn ${this.props.locked ? 'locked' : ''}`} style={{ backgroundColor: '#F9F9F9', width: 100, marginHorizontal: 10, marginVertical: 10, justifyContent: 'center', alignItems: 'center', borderRadius: 20, borderColor: this.props.selected ? '#6AC3DB' : '#E5E5E5', borderWidth: this.props.selected ? 3 : 1 }}
                    onClick={() => {
                        this.props.OnItemSelected();


                    }}>

                    {
                        this.props.locked
                            ?
                            <img
                                src={'../../../../assets/images/lockIcon.png'}
                                width="35"
                                style={{
                                    position: 'absolute',
                                    top: -1,
                                    right: 0
                                }}
                            />
                            : null
                    }
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        style={{ height: 100, width: 100, }}>

                        <g transform={`scale(${this.props.z})`}>
                            {
                                this.renderMale(this.props.targetId)
                            }
                        </g>
                    </svg>
                    {this.props.locked &&
                        <div className="itempoints">
                            {this.props.points} {i18next.t('levelsMap.points')}
                        </div>
                    }
                </div>
            );
        } else {
            return (
                <g>
                    {
                        this.renderMale(this.props.targetId)
                    }
                </g>
            );
        }

    }
}

export default M_body;
