import i18next from 'i18next';
import React, { Component } from 'react';

class HumanBackground extends Component {
    constructor(props) {
        super(props);
        this.state = {
        };
    }

    renderSVG = (keyId) => {
        switch (keyId) {
            case 0:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >

                    </g>
                );
            case 1:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <circle
                            transform="rotate(-67.611 124.815 101.04)"
                            cx={124.81}
                            cy={101.04}
                            fill="#bfef2b"
                            r={7.87}
                        />
                        <circle
                            transform="rotate(-22.089 136.796 47.022)"
                            cx={136.81}
                            cy={47.03}
                            fill="#ef2240"
                            r={7.87}
                        />
                        <circle
                            transform="rotate(-22.12 89.122 3.027)"
                            cx={89.13}
                            cy={3.03}
                            fill="#5ce5bb"
                            r={7.87}
                        />
                        <circle
                            transform="rotate(-45.001 23.261 30.456)"
                            cx={23.26}
                            cy={30.46}
                            fill="#ffd216"
                            r={7.87}
                        />
                        <circle
                            transform="rotate(-67.5 20.02 82.035)"
                            cx={20.02}
                            cy={82.04}
                            fill="#1a5da0"
                            r={7.87}
                        />
                    </g>
                );
            case 2:
                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path fill="#000" d="M19.86 49.3c-.06 0-.13-.01-.19-.02L9.03 47.32a1.038 1.038 0 01.38-2.04l10.65 1.96c.56.1.93.64.83 1.21-.1.5-.54.85-1.03.85zM28.91 32.29c-.23 0-.47-.08-.66-.24l-9.92-8.29c-.44-.37-.5-1.02-.13-1.46.37-.44 1.02-.5 1.46-.13l9.92 8.29a1.033 1.033 0 01-.67 1.83zM44.46 20.9c-.41 0-.79-.24-.96-.64L39.19 9.79c-.22-.53.03-1.13.56-1.35.53-.22 1.13.03 1.35.56l4.31 10.46c.22.53-.03 1.13-.56 1.35a.86.86 0 01-.39.09z" />

                    </g>
                );
            case 3:

                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <g fill="#231f20">
                            <path d="M133.21 28.11c-.28 0-.58-.03-.88-.1a.593.593 0 01-.37-.25c-.08-.13-.11-.29-.08-.44.03-.15.12-.29.26-.37.13-.08.29-.11.44-.08.69.15 1.28.06 1.73-.25.84-.59 1.04-1.8 1.04-1.81.03-.22.2-.41.42-.48.22-.06.46.01.61.18.02.02 1.65 1.9 3.26 1.94h.05c.56 0 1.03-.22 1.47-.69.72-.76 1.04-1.5.98-2.19-.08-.81-.67-1.36-.85-1.51-.02-.02-.06-.05-.1-.08a.59.59 0 01-.07-.8c.19-.24.55-.29.8-.11 0 0 .04.03.1.08.22.15 1.03.17 1.97-.31.45-.22 1.89-1.07 1.75-2.63-.09-1.03-.47-1.8-1.13-2.28-1.13-.84-2.83-.69-3.35-.62-.1.02-.2.04-.29.04-.31.02-.58-.2-.62-.5-.04-.3.16-.59.46-.65.01 0 .09-.02.22-.04.55-.17 1.25-1 1.48-2.12.14-.67.26-2.33-1.63-3.32-1.31-.68-2.52-.54-3.7.44a6.65 6.65 0 00-1.47 1.78c-.14.26-.45.38-.73.27a.587.587 0 01-.36-.69c0-.01.38-1.6-.32-2.51-.36-.47-.99-.71-1.87-.71-.61 0-1.04.17-1.35.54-.8.95-.49 2.88-.48 2.9a.584.584 0 01-1.1.36c-.34-.67-1.28-1.4-2.42-1.51-.71-.07-1.74.09-2.63 1.22-.4.5-.55 1.01-.44 1.51.22 1.09 1.56 2.03 2.05 2.3.23.13.35.4.29.65-.06.26-.29.44-.56.45-.03 0-3 .1-3.06 1.62-.02.7.16 1.22.54 1.53.9.73 2.67.35 2.74.33.26-.06.54.07.66.31.12.25.06.54-.16.71-.01.01-.88.73-1.09 1.63-.07.31-.39.51-.7.44a.588.588 0 01-.44-.7c.09-.37.25-.74.47-1.1-.73-.02-1.58-.18-2.23-.71-.68-.56-1.01-1.39-.97-2.48.04-1.27.99-2.16 2.69-2.55-.6-.54-1.21-1.29-1.39-2.19-.17-.85.05-1.68.67-2.47.95-1.21 2.25-1.79 3.66-1.66.77.08 1.55.38 2.2.84.06-.72.27-1.55.8-2.18.54-.64 1.29-.96 2.25-.96 1.26 0 2.2.39 2.79 1.16.32.42.53.92.62 1.52 1.13-1.18 3.06-2.43 5.56-1.13 1.81.94 2.64 2.66 2.23 4.59-.14.67-.42 1.31-.8 1.84.77.08 1.68.3 2.45.87.94.7 1.47 1.75 1.6 3.12.14 1.55-.75 2.96-2.39 3.78-.5.25-1.03.42-1.52.49.17.35.28.71.31 1.09.1 1.04-.33 2.09-1.29 3.11-.68.72-1.48 1.07-2.4 1.06-1.36-.03-2.62-.93-3.4-1.62-.23.54-.61 1.15-1.23 1.58-.5.34-1.09.52-1.75.52z" />
                            <path d="M122.93 29.24a.446.446 0 01-.34-.73l6.69-8.1c.16-.19.44-.22.63-.06s.22.44.06.63l-6.69 8.1c-.09.11-.22.16-.35.16zM124.64 30.74c-.11 0-.22-.04-.31-.12a.444.444 0 01-.01-.63l7.32-7.59c.17-.18.45-.18.63-.01.18.17.18.45.01.63l-7.32 7.59c-.09.09-.2.13-.32.13zM17.75 29.6c-.41 0-.84-.09-1.29-.28-1.07-.44-1.57-1.5-1.44-3.03-.63.3-1.42.55-2.21.43-.83-.12-1.5-.6-2-1.41-.76-1.24-.86-2.58-.28-3.79.27-.56.68-1.07 1.18-1.46-.6-.29-1.06-.67-1.36-1.15-.51-.82-.53-1.83-.05-3 .5-1.22 1.22-1.94 2.14-2.13.29-.06.59-.07.9-.02-.47-1.25-.71-3.14 1.06-4.76 1.42-1.3 3.21-1.48 4.8-.49.49.3.92.7 1.25 1.14.39-.74.88-1.32 1.48-1.71.92-.61 2.03-.74 3.29-.41 1.43.38 2.4 1.63 2.59 3.35.05.47.04.93-.03 1.35.32-.02.63.01.92.09.96.25 1.75.97 2.35 2.15.43.85.48 1.69.16 2.5-.45 1.14-1.57 1.94-2.38 2.4.36.36.73.86.89 1.5.21.82.06 1.66-.47 2.5-.09.15-.24.25-.41.29a.652.652 0 01-.7-.98c.33-.52.44-1.02.32-1.47-.22-.86-1.17-1.39-1.18-1.4a.662.662 0 01-.34-.62c.02-.25.18-.48.42-.57.02-.01 2.11-.81 2.63-2.13.18-.46.14-.92-.11-1.43-.42-.83-.92-1.32-1.51-1.47-.68-.18-1.31.14-1.48.25-.02.02-.06.04-.11.07-.31.16-.69.06-.87-.24-.18-.3-.1-.68.19-.88.01-.01.04-.02.08-.05.17-.14.43-.76.32-1.69-.05-.44-.32-1.89-1.63-2.24-.88-.24-1.63-.16-2.23.24-1.04.68-1.44 2.16-1.54 2.62-.01.1-.03.19-.06.28-.1.33-.44.53-.77.45a.654.654 0 01-.51-.73c0-.02.01-.09.04-.2.02-.48-.47-1.31-1.31-1.83-.51-.32-1.84-.92-3.23.34-2.28 2.09.18 4.87.29 4.98a.656.656 0 01-.94.91c-.28-.28-1.18-.95-1.92-.8-.47.1-.88.55-1.2 1.34-.31.76-.33 1.37-.05 1.81.47.75 1.74 1 2.19 1.03.34.02.6.29.61.63.01.34-.24.63-.57.67-.63.08-1.54.65-1.97 1.55-.27.56-.45 1.46.21 2.54.3.48.64.74 1.08.8 1.13.17 2.48-.97 2.54-1.02.22-.19.55-.22.79-.05.25.17.35.48.25.76-.01.03-.83 2.51.36 3 .57.23 1.03.24 1.39.02.74-.44 1.04-1.75 1.09-2.17a.63.63 0 01.58-.57c.31-.03.59.15.69.44 0 .01.34.95 1.01 1.39.15.1.25.24.28.41.03.17 0 .35-.09.49-.1.15-.24.25-.42.28a.61.61 0 01-.49-.1c-.25-.17-.48-.37-.7-.63-.25.58-.66 1.2-1.29 1.57-.36.22-.78.34-1.23.34z" />
                            <path d="M30.91 29.37c-.15 0-.31-.06-.41-.19L24.31 22c-.2-.23-.17-.57.06-.77.23-.2.57-.17.77.06l6.19 7.18c.2.23.17.57-.06.77-.1.09-.23.13-.36.13zM28.88 30.66c-.13 0-.26-.05-.36-.14l-6.08-5.4a.542.542 0 01-.05-.77c.2-.23.55-.25.77-.05l6.08 5.4c.23.2.25.55.05.77-.1.13-.25.19-.41.19z" />
                        </g>
                    </g>
                );
            case 4:

                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <g fill="#ffb3ce">
                            <path d="M29.47 98.07s-5.83-2.8-5.21-6.37c.25-1.45 1.1-2.2 2.05-2.32 1.27-.15 2.53.75 2.79 2.4 0 0 .23-2.49 2.44-2.56 1.67-.05 2.4 1.97 2.1 3.45-.6 2.96-4.17 5.4-4.17 5.4zM136 101.67s-13.3-6.38-11.88-14.54c.58-3.31 2.51-5.03 4.67-5.29 2.89-.34 5.78 1.72 6.36 5.47 0 0 .52-5.68 5.56-5.84 3.81-.12 5.47 4.51 4.79 7.87-1.34 6.76-9.5 12.33-9.5 12.33zM20.09 119.87s-9.91-4.75-8.85-10.83c.43-2.47 1.87-3.74 3.48-3.94 2.15-.26 4.3 1.28 4.74 4.07 0 0 .39-4.23 4.14-4.35 2.84-.09 4.07 3.35 3.57 5.86-1 5.04-7.08 9.19-7.08 9.19z" />
                        </g>
                    </g>
                );
            case 5:

                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path fill="#000" d="M128.2 35.17a1.05 1.05 0 11-2.1 0 1.05 1.05 0 012.1 0zM127.08 33.27c-.52 0-.96-.41-.99-.94-.12-2.68-.01-5.1 2.56-7.47 1.83-1.69 2.88-3.71 2.95-5.67.06-1.46-.45-2.81-1.46-3.91-1.04-1.12-2.82-1.8-4.53-1.75-1.11.04-2.68.39-3.87 1.85-.85 1.05-.9 2.21-.79 2.99.16 1.18.81 2.31 1.64 2.9.8.56 2.16.66 3.25.25.68-.26 1.56-.84 1.85-2.1a.986.986 0 011.92.44c-.38 1.64-1.46 2.88-3.06 3.5-1.7.66-3.75.47-5.09-.47-1.28-.9-2.22-2.52-2.46-4.24-.23-1.66.2-3.26 1.22-4.51 1.3-1.59 3.19-2.51 5.34-2.58 2.29-.08 4.61.84 6.04 2.38 1.38 1.48 2.07 3.32 1.99 5.32-.09 2.49-1.37 5-3.58 7.05-1.96 1.81-2.03 3.53-1.92 5.94.02.54-.4 1.01-.94 1.03-.04-.02-.05-.01-.07-.01z" />

                    </g>
                );
            case 6:

                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path fill="#000" d="M18.53 11.94l1.65 11.08 2.09-.36-.98-5.09 4.17-1.18.36 5.46 2.61-.52-2.09-10.83-1.65.3.66 4.44-4.4.65-.63-4.3zM35.8 19.76l2.53-.84-6.2-9.56-2.66.81.83 10.89 2.2-.44-.89-4.84 1.93-.5 2.26 4.48zm-4.47-5.28l-.37-2.93.7-.27 1.45 2.86-1.78.34zM4.42 27.94L1.38 41.69 4 42.2l1.13-6.41 5.42.48-2.02 6.57 3.29.56 2.4-13.64-2.06-.39-1.22 5.5-5.45-1.21 1.18-5.32zM21.17 44.86l3.35.15-2.98-13.99-3.49-.24-3.9 13.15 2.77.47 1.13-6.08 2.48.28.64 6.26zm-2.88-8.2l.88-3.6h.94l.42 4.01-2.24-.41zM45.86 1.61l-4.09 13.47 2.57.72 1.63-6.31 5.36.91-2.52 6.39 3.24.81L55.5 4.19l-2.03-.56-1.64 5.4-5.34-1.63 1.59-5.22zM62.98 15.33l3.34-.25-4.64-13.54-3.49.18-2.3 13.52 2.81.14.4-6.17 2.5-.02 1.38 6.14zm-3.84-7.8l.45-3.68.93-.11.9 3.93-2.28-.14z" />

                    </g>
                );
            case 7:

                return (
                    <g transform={`translate(${this.props.x}, ${this.props.y})`} >
                        <path fill="#000" d="M128.76 24.48h-.42c-.25 0-.48-.14-.6-.35a.7.7 0 01.01-.7c.82-1.37 2.8-4.77 4.21-7.27-.6.03-1.22.06-1.85.1-.86.05-1.76.1-2.74.14a.686.686 0 01-.72-.66c-.02-.38.28-.71.66-.72.98-.04 1.87-.09 2.73-.14 1.1-.06 2.13-.12 3.12-.14.26 0 .48.12.61.33a.7.7 0 01.01.7c-1.14 2.05-3.05 5.35-4.21 7.33.93-.01 1.93-.03 2.84-.06.76-.02 1.47-.04 2.05-.04.38 0 .7.3.7.69 0 .38-.3.7-.69.7-.58.01-1.28.02-2.04.04-1.18.02-2.51.05-3.67.05zM121.54 30.87c-.23 0-.45-.12-.58-.31a.695.695 0 01-.03-.71c.38-.71.94-1.95 1.53-3.27.37-.81.74-1.64 1.11-2.44-.85.1-1.5.18-2.61.37a.686.686 0 01-.8-.56c-.07-.38.19-.74.56-.8 1.29-.23 1.98-.31 3.02-.42.27-.03.57-.06.92-.11a.698.698 0 01.71 1c-.53 1.09-1.09 2.33-1.63 3.54-.36.8-.71 1.58-1.02 2.23 1.16-.1 1.89-.17 3.09-.3a.695.695 0 01.14 1.38c-1.58.16-2.4.24-4.34.41-.03-.01-.05-.01-.07-.01zM144.19 22.52a.692.692 0 01-.68-.84c.46-2.09 1.54-7.38 2.24-11.06-1.41.54-2.75 1.11-4.25 1.74l-.74.31a.698.698 0 01-.91-.37c-.15-.35.02-.76.37-.91l.74-.31c1.91-.81 3.57-1.5 5.46-2.19.23-.09.5-.04.69.12.19.16.28.41.23.66-.57 3.12-1.61 8.24-2.21 11.11.88-.31 1.66-.62 2.43-.92.81-.31 1.57-.61 2.41-.91.36-.13.76.06.88.42.13.36-.06.76-.42.88-.82.29-1.57.58-2.36.89-1.11.43-2.25.88-3.65 1.34-.09.03-.16.04-.23.04z" />

                    </g>
                );
        }
    }

    render() {
        if (this.props.type == 'button') {
            return (
                <div className="vectorBtn" style={{ backgroundColor: '#F9F9F9', width: 100, marginHorizontal: 10, marginVertical: 10, justifyContent: 'center', alignItems: 'center', borderRadius: 20, borderColor: this.props.selected ? '#6AC3DB' : '#E5E5E5', borderWidth: this.props.selected ? 3 : 1 }}
                    onClick={() => {
                        this.props.OnItemSelected();
                    }}>


{this.props.index === 0 &&
        
        <svg
    width={179}
    height={120}
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    style={{
        position: "absolute",
        left: 0,
        top: 0,
        width: "100%",
        height: "100%"
    }}
  >
    <path d="m1 1 177 118m0-118L1 119" stroke="#E5E5E5" />
  </svg>
        } 
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        style={{ height: 100, width: 100, }}>

                        <g transform={`scale(${this.props.z})`}>
                            {
                                this.renderSVG(this.props.targetId)
                            }
                        </g>
                    </svg>
                    {this.props.locked &&
                        <div className="itempoints">
                            {this.props.points} {i18next.t('levelsMap.points')}
                        </div>
                    }
                </div>
            );
        } else {
            return (
                <g>
                    {
                        this.renderSVG(this.props.targetId)
                    }
                </g>
            );
        }
    }
}

export default HumanBackground;
